name: Build_overtls

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clear caches'
        required: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{secrets.REPOSITORY}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true    

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.HUB_NAME }}
          password: ${{ secrets.HUB_PASS }}  

      - name: Build Docker images
        run : |
            cd overtls
            docker build -t overtls:latest .
            
      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
            registry: registry.cn-hangzhou.aliyuncs.com
            username: ${{ secrets.HUB_NAME }}
            password: ${{ secrets.HUB_PASS }}
  
      - name: Push Docker images
        run : |
            imageName=overtls
            docker tag $imageName registry.cn-hangzhou.aliyuncs.com/dubux/$imageName:latest
            docker push registry.cn-hangzhou.aliyuncs.com/dubux/$imageName
            file= "$imageName/README.md"
            repositoryname="docker_build_action"
            \cp f
            if [ -d "$repositoryname/$imageName" ]; then
              \cp -rf $file $repositoryname/$imageName
              else
                mkdir -p $repositoryname/$imageName
                \cp -rf $file $repositoryname/$imageName
            fi
            cd $repositoryname
            git config --global user.name 'Action Bot'
            git config --global user.email 'bot@noreply.github.com'
            git remote set-url origin https://x-access-token:${{ secrets.DUBUXTOKEN }}@github.com/${{ github.repository }}
            git add $file
            git commit -am "update readme" && git push || echo "add $imageName readme"

