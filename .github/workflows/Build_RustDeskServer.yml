name: Build_RustDeskServer

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clear caches'
        required: false
        type: boolean
env:
  CARGO_TERM_COLOR: always
  LATEST_TAG: latest
jobs:
  deploy:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        job:
          - { name: "amd64",   target: "x86_64-unknown-linux-musl" }
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{secrets.REPOSITORY}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
         go-version: 1.19
      - name: Build RustDesk API Server
        run: |
          cd rustdesk-api-server
          CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o rustdesk-api-server .
          \cp -f rustdesk-api-server ../rustdesk/apiserver
  
      - name: Build RustDesk Server
        run: |
          bash <(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs) -y
          source $HOME/.cargo/env
          git clone https://github.com/rustdesk/rustdesk-server.git ./build_rustdesk
          cd ./build_rustdesk
          cargo install cross
          cross build --release --all-features --target=${{ matrix.job.target }}
          chmod -v a+x target/${{ matrix.job.target }}/release/*
          \cp -f target/${{ matrix.job.target }}/release/hbbr ../rustdesk/hbbr
          \cp -f target/${{ matrix.job.target }}/release/hbbs ../rustdesk/hbbs
          \cp -f target/${{ matrix.job.target }}/release/rustdesk-utils ../rustdesk/rustdesk-utils


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3
          
      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.HUB_NAME }}
          password: ${{ secrets.HUB_PASS }}

      # Runs a single command using the runners shell
      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          file: 'Build_RustDeskServer'
          platforms: linux/amd64
          context: ./
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/dubux/rustdeskserver:latest
