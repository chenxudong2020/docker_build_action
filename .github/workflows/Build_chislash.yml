name: Build_chislash

on:
  schedule:
    - cron: '0 18 * * *'
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clear caches'
        required: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{secrets.REPOSITORY}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.HUB_NAME }}
          password: ${{ secrets.HUB_PASS }}  

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: chislash/./
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/dubux/chislash:latest

      - uses: actions/checkout@v4
        with:
          repository: ${{secrets.SYNOLOGYSPK}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true
          
      - name: Build SPK
        id: Build_SPK
        run : |
          cd chislash && chmod +x ./pkgCreate.sh && ./pkgCreate.sh && echo "buildResult=$(-d ${{ github.workspace }}/chislash/build)" >> $GITHUB_OUTPUT

      - name: release
      - uses: ncipollo/release-action@v1
        id: release_packages
        if: ${{steps.Build_SPK.outputs.buildResult}}== 'true'
        with:
            artifacts: "${{ github.workspace }}/chislash/build/*.spk"
            allowUpdates: true
            generateReleaseNotes: false
            tag: "v1.0.0"
            body: |
                ${{ github.event.head_commit.message }}
                ${{steps.desc.outputs.release}}
            replacesArtifacts: true
