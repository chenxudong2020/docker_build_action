name: Build_v2raya

on:
  schedule:
    - cron: '0 18 * * 0,2,4,6'
  workflow_dispatch:
    inputs:
      clean_cache:
        description: 'Clear caches'
        required: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{secrets.REPOSITORY}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.HUB_NAME }}
          password: ${{ secrets.HUB_PASS }}  

      - name: Build Docker images
        run : |
            git clone https://github.com/v2rayA/v2rayA
            cd v2rayA
            docker build -f Dockerfile.nightly -t v2raya:latest .
            
      - name: Login to aliyuncs
        uses: docker/login-action@v2
        with:
            registry: registry.cn-hangzhou.aliyuncs.com
            username: ${{ secrets.HUB_NAME }}
            password: ${{ secrets.HUB_PASS }}
  
      - name: Push Docker images
        run : |
            imageName=v2raya
            docker tag $imageName registry.cn-hangzhou.aliyuncs.com/dubux/$imageName:latest
            docker push registry.cn-hangzhou.aliyuncs.com/dubux/$imageName
      - name: Check Synology SPK    
        uses: actions/checkout@v4
        with:
          repository: ${{secrets.SYNOLOGYSPK}}
          ref: main
          token: ${{ secrets.DUBUXTOKEN }}
          submodules: true
          show-progress: true    
      - name: Build SPK
        id: Build_SPK
        run : |
          dir="v2raya"
          isExist='false'
          if [ -d "$dir" ]; then  
              cd $dir && pwd && chmod +x ./pkgCreate.sh && ./pkgCreate.sh
              isExist='true'
          fi
          echo "isExist=${isExist}" >> $GITHUB_ENV
          
      
      - name: Release
        uses: ncipollo/release-action@v1
        id: release_packages
        if: env.isExist == 'true'
        with:
            artifacts: "${{ github.workspace }}/v2raya/build/*.spk"
            allowUpdates: true
            token: ${{ secrets.DUBUXTOKEN }}
            generateReleaseNotes: false
            tag: "v1.0.0"
            body: |
                ${{ github.event.head_commit.message }}
                ${{steps.desc.outputs.release}}
            replacesArtifacts: true